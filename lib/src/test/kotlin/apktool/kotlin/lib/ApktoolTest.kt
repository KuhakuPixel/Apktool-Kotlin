/*
 * This Kotlin source file was generated by the Gradle "init" task.
 */
package apktool.kotlin.lib

import org.junit.jupiter.api.Test

import org.junit.jupiter.api.Assertions.*
import java.io.File

class ApktoolTest {
    //
    var classLoader = javaClass.classLoader

    // https://stackoverflow.com/a/43415602/14073678
    val testApkPathStr = classLoader.getResource("app-debug.apk").file

    @Test fun testDecompile() {
        Apktool(
                apkFile = testApkPathStr,
                decodeResource = true,
        ).use {
            // have manifest
            assertTrue(it.manifestFile.exists())
            assertTrue(it.manifestFile.readText().contains("<uses-permission android:name=\"com.android.vending.BILLING\"/>"))
            // have res folder, but shouldn't have resources.arsc (the compiled resource in binary form https://stackoverflow.com/a/30768318/14073678)
            // because apktool should decode the resource
            assertTrue(it.resourceFolder.exists())
            assertFalse(it.resourceArscFile.exists())
        }
    }

    @Test fun `testDecompile decodeResource=false`() {
        Apktool(
                apkFile = testApkPathStr,
                decodeResource = false,
        ).use {
            // have some manifest
            assertTrue(it.manifestFile.exists())
            // have res folder but have resources.arsc
            assertTrue(it.resourceFolder.exists())
            assertTrue(it.resourceArscFile.exists())

        }
    }
}
